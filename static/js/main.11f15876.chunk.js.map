{"version":3,"sources":["routes/api.ts","routes/Coins.tsx","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Title","styled","h1","props","theme","textColor","Container","div","Header","header","CoinsList","ul","Coin","li","bgColor","accentColor","Loader","span","Img","img","Button","button","Coins","toggleTheme","useQuery","isLoading","data","Helmet","onClick","className","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","Overview","OverviewItem","Price","tickersData","ath_price","price","market_cap_change_24h","percent_change_30m","percent_change_1h","percent_change_12h","percent_change_24h","Chart","coinId","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","type","series","x","time_close","y","open","high","low","close","options","mode","chart","height","width","toolbar","show","stroke","tooltip","formatter","value","toFixed","yaxis","xaxis","categories","labels","style","colors","Description","p","Tabs","Tab","isActive","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchPriceInfo","refetchInterval","tickersLoading","loading","rank","quotes","USD","description","total_supply","max_supply","path","Router","basename","process","lightTheme","darkTheme","GlobalStyle","createGlobalStyle","App","useState","setTheme","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.11f15876.chunk.js","sourcesContent":["const BASE_URL = \"https://api.coinpaprika.com/v1\"\n\nexport function fetchCoins() {\n    return fetch(`${BASE_URL}/coins`).then(response => \n    response.json());\n}\n\nexport function fetchCoinInfo(coinId:string) {\n    return fetch(`${BASE_URL}/coins/${coinId}`).then(response => \n    response.json());\n}\n\nexport function fetchPriceInfo(coinId:string) {\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then(response => \n    response.json());\n}\n\nexport function fetchCoinHistory(coinId:string) {\n    const endDate = Math.floor(Date.now() / 1000)\n    const startDate = endDate - 60 * 60 * 24 * 7\n    return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then(response => \n        response.json());\n}\n","import { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"./api\";\n\nconst Title = styled.h1`\n     color: ${props => props.theme.textColor};\n     font-size: 48px;\n     margin-bottom: 30px;\n     margin-top: 30px;\n`;\n\nconst Container = styled.div`\n    padding:0px 10px;\n    max-width: 480px;\n    margin: 0 auto;\n`;\n\nconst Header = styled.header`\n    height: 10vh;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n`;\n\nconst CoinsList = styled.ul`\n\n`;\n\nconst Coin = styled.li`\n    background-color: white;\n    color: ${props => props.theme.bgColor};\n    margin-bottom: 10px;\n    border-radius: 15px;\n    \n    a {\n        transition: color 0.2s ease-in-out;\n        padding: 20px;\n        display: flex;\n        align-items: center;\n    }\n    \n    &:hover {\n        a{\n            color:${props => props.theme.accentColor}\n        }\n    }\n`;\n\nconst Loader = styled.span`\n    text-align: center;\n    display: block;\n`;\n\nconst Img = styled.img`\n    width: 35px;\n    height: 35px;\n    margin-right: 15px;\n`;\n\nconst Button = styled.button`\n  background-color: rgba(0, 0, 0, 0.5);\n  width: 30px;\n  height:30px;\n  border-radius:15px;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  border:none;\n  color: ${props=> props.theme.textColor};\n  cursor: pointer;\n`;\n\ninterface ICoin {\n    \"id\": string,\n    \"name\": string,\n    \"symbol\": string,\n    \"rank\": number,\n    \"is_new\": boolean,\n    \"is_active\": boolean,\n    \"type\": string\n}\n\ninterface ICoinsProps {\n    toggleTheme: () => void;\n    theme: string;\n  }\n\n  \n\nfunction Coins({ toggleTheme, theme }:ICoinsProps) {\n    const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins)\n    /* const [coins, setCoins] = useState<CoinInterface[]>([]);\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        (async() => {\n            \n            setCoins(json.slice(0, 100));\n            setLoading(false);\n        })();\n    }, []) */\n    return <Container>\n         <Helmet>\n            <title>CrpytoTracker | Coins </title>\n        </Helmet>\n        <Header>\n            <div>\n            </div>\n\n            <Title>\n                Coins\n            </Title>\n            <Button onClick={toggleTheme}>\n              { theme === \"lightTheme\" ? ( <i className=\"fas fa-moon\"></i> ) : ( <i className=\"fas fa-sun\"></i> ) }\n            </Button>\n        </Header>\n        { isLoading ? ( <Loader >Loading...</Loader>) : \n            (<CoinsList>\n                {data?.slice(0, 100).map((coin) => (\n                <Coin key={coin.id}>\n                    <Link to={{\n                                pathname:`/${coin.id}`,\n                                state: { name: coin.name },\n                            }}\n                            >\n                        <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\n                        {coin.name} &rarr;\n                    </Link>\n                </Coin>\n                ))}\n            </CoinsList> \n        )}\n    </Container>\n}\n\nexport default Coins;","import styled from \"styled-components\";\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\n\ninterface IPrice {\n    ath_date: string;\n    ath_price: number;\n    market_cap: number;\n    market_cap_change_24h: number;\n    percent_change_1h: number;\n    percent_change_1y: number;\n    percent_change_6h: number;\n    percent_change_7d: number;\n    percent_change_12h: number;\n    percent_change_15m: number;\n    percent_change_24h: number;\n    percent_change_30d: number;\n    percent_change_30m: number;\n    percent_from_price_ath: number;\n    price: number;\n    volume_24h: number;\n    volume_24h_change_24h: number;\n}\n\ninterface IPriceProps {\n  tickersData? : IPrice\n}\n\nfunction Price( { tickersData } : IPriceProps) {\n    return ( \n      <>\n        <Overview>\n          <OverviewItem>All time High Price:</OverviewItem>\n          <OverviewItem>$ {tickersData?.ath_price}</OverviewItem>\n        </Overview>\n        <Overview>\n          <OverviewItem>Price</OverviewItem>\n          <OverviewItem>$ {tickersData?.price}</OverviewItem>\n        </Overview>\n        <Overview>\n            <OverviewItem>Max Change rate in last 24h:</OverviewItem>\n          <OverviewItem>$ {tickersData?.market_cap_change_24h}</OverviewItem>\n        </Overview>\n        <Overview>\n            <OverviewItem>Change rate (last 30 Minutes):</OverviewItem>\n          <OverviewItem>$ {tickersData?.percent_change_30m}</OverviewItem>\n        </Overview>\n        <Overview>\n          <OverviewItem>Change rate (last 1 hours):</OverviewItem>\n          <OverviewItem>$ {tickersData?.percent_change_1h}</OverviewItem>\n        </Overview>\n        <Overview>\n          <OverviewItem>Change rate (last 12 hours):</OverviewItem>\n          <OverviewItem>$ {tickersData?.percent_change_12h}</OverviewItem>\n        </Overview>\n        <Overview>\n          <OverviewItem>Change rate (last 24 hours):</OverviewItem>\n          <OverviewItem>$ {tickersData?.percent_change_24h}</OverviewItem>\n        </Overview>\n        \n      </>\n      )\n}\n\nexport default Price","import { useQuery } from \"react-query\"\nimport { fetchCoinHistory } from \"./api\"\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical  {\n    time_open: string;  \n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume:number;\n    market_cap: number;\n}\ninterface ChartProps {\n    coinId:string;\n    theme: string;\n}\n\n\n// 포매터ㅓㅓㅓㅓㅓ\nfunction Chart({ coinId, theme }:ChartProps) {\n    const {isLoading, data} = useQuery<IHistorical[]>(\n        [\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n    return <div>{ isLoading ? ( \"Loading Chart...\" \n    ) : ( \n    <ApexChart \n        type=\"candlestick\"\n        series={[\n            {\n                name: \"price\",\n                data: data?.map(price =>({\n                    x: price.time_close,\n                    y: [price.open, price.high, price.low, price.close]\n                }))\n            }\n        ]}\n        options={{\n                theme:{\n                    mode: theme === \"lightTheme\" ? \"light\" : \"dark\" \n                },\n                chart:\n                    {\n                    type: 'candlestick',\n                    height: 500,\n                    width: 500,\n                    toolbar:{\n                        show: true\n                    }\n                },\n                stroke: {\n                    width:1,\n                },\n                tooltip: {\n                    y: {\n                        formatter: (value) => `$ ${value.toFixed(2)}` \n                    }\n                },\n                yaxis:{\n                    show:false,         \n                },\n                xaxis:{\n                    type:\"datetime\",\n                    categories: data?.map(price => price.time_close),\n                    labels:{\n                        style:{\n                            colors: theme === \"lightTheme\" ? \"#fbc531\" : \"#f5f6fa\",\n                        }\n                    }\n                }\n            }}\n        /> \n        )}\n    </div>\n}\n\nexport default Chart","import styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport { useEffect, useState,  } from \"react\";\nimport { useParams, useLocation, Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Price from \"./Price\";\nimport Chart from \"./Chart\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchPriceInfo } from \"./api\";\n\nconst Title = styled.h1`\n     color: ${props => props.theme.textColor};\n     font-size: 48px;\n     margin-bottom: 30px;\n     margin-top: 30px;\n`;\n\nconst Container = styled.div`\n    padding:0px 10px;\n    max-width: 480px;\n    margin: 0 auto;\n`;\n\nconst Header = styled.header`\n    height: 10vh;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n`;\n\nconst Button = styled.button`\n  background-color: rgba(0, 0, 0, 0.5);\n  width: 30px;\n  height:30px;\n  border-radius:15px;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  border:none;\n  color: ${props=> props.theme.textColor};\n  cursor: pointer;\n`;\n\nconst Loader = styled.span`\n    text-align: center;\n    display: block;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive : boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color : ${props => props.isActive ? props.theme.accentColor : props.theme.textColor };\n  a {\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n    coinId:string;\n}\n\ninterface RotueState {\n    name : string;\n}\n\ninterface InfoData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n    contract: string;\n    platform: string;\n    description: string;\n    message: string;\n    open_source: boolean;\n    started_at: string;\n    development_status: string;\n    hardware_wallet: boolean;\n    proof_type: string;\n    org_structure: string;\n    hash_algorithm: string;\n    first_data_at: string;\n    last_data_at: string;\n}\n\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n      USD: {\n        ath_date: string;\n        ath_price: number;\n        market_cap: number;\n        market_cap_change_24h: number;\n        percent_change_1h: number;\n        percent_change_1y: number;\n        percent_change_6h: number;\n        percent_change_7d: number;\n        percent_change_12h: number;\n        percent_change_15m: number;\n        percent_change_24h: number;\n        percent_change_30d: number;\n        percent_change_30m: number;\n        percent_from_price_ath: number;\n        price: number;\n        volume_24h: number;\n        volume_24h_change_24h: number;\n      };\n    };\n}\n\ninterface ICoinProps {\n  toggleTheme: () => void;\n  theme: string;\n}\n\nfunction Coin({ toggleTheme, theme }:ICoinProps) {\n\n    const { coinId } = useParams<RouteParams>();\n    const { state } = useLocation<RotueState>();\n    const priceMatch = useRouteMatch(\"/:coinId/price\");\n    const chartMatch = useRouteMatch(\"/:coinId/chart\");\n    const {isLoading: infoLoading, data: infoData} = useQuery<InfoData>(\n        [\"info\", coinId], () => fetchCoinInfo(coinId),);\n    const {isLoading: tickersLoading, data: tickersData} = useQuery<PriceData>(\n      [\"tickers\", coinId], () => fetchPriceInfo(coinId),\n        {\n            refetchInterval: 5000,\n        }\n        );\n    const loading = infoLoading || tickersLoading;\n    /* const [loading, setLoading] = useState(true);\n    const [info, setInfo] = useState<InfoData>();\n    const [priceInfo, setPriceInfo] = useState<PriceData>();\n    useEffect(() => {\n        (async() => {\n            const infoData = await (\n                await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n                ).json();\n                console.log(infoData);\n            const priceData = await (\n                await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n                ).json();\n                console.log(priceData);  \n            setInfo(infoData);\n            setPriceInfo(priceData);\n            setLoading(false)\n        })();\n    }, [coinId]) */\n    return (\n    <Container>\n        <Helmet>\n            <title>CrpytoTracker | {state?.name ? state.name : infoLoading ? \"Loading...\" : infoData?.name} </title>\n        </Helmet>\n        <Header>\n            <Link to={\"/\"}>\n              <Button>\n                  <i className=\"fas fa-arrow-left\"></i> \n                </Button>\n            </Link>\n            <Title>\n            {state?.name ? state.name : infoLoading ? \"Loading...\" : infoData?.name}\n            </Title>\n            <Button onClick={toggleTheme}>\n              { theme === \"lightTheme\" ? ( <i className=\"fas fa-moon\"></i> ) : ( <i className=\"fas fa-sun\"></i> ) }\n            </Button>\n        </Header>\n        { loading ? ( <Loader>Loading...</Loader>) : \n\n        (\n            <>\n              <Overview>\n                <OverviewItem>\n                  <span>Rank:</span>\n                  <span>{infoData?.rank}</span>\n                </OverviewItem>\n                <OverviewItem>\n                  <span>Symbol:</span>\n                  <span>${infoData?.symbol}</span>\n                </OverviewItem>\n                <OverviewItem>\n                  <span>Price:</span>\n                  <span>$ {tickersData?.quotes.USD.price.toFixed(8)}</span>\n                </OverviewItem>\n              </Overview>\n              <Description>{infoData?.description}</Description>\n              <Overview>\n                <OverviewItem>\n                  <span>Total Suply:</span>\n                  <span>{tickersData?.total_supply}</span>\n                </OverviewItem>\n                <OverviewItem>\n                  <span>Max Supply:</span>\n                  <span>{tickersData?.max_supply}</span>\n                </OverviewItem>\n              </Overview>\n              <Tabs>\n                  <Tab isActive={ chartMatch !== null }>\n                    <Link to={`/${coinId}/chart`}>\n                        Chart\n                    </Link>\n                    </Tab>\n                  <Tab isActive={ priceMatch !== null }>\n                    <Link to={`/${coinId}/price`}>\n                        Price\n                    </Link>\n                  </Tab>\n              </Tabs>\n              \n              <Switch>\n                <Route path={`/:coinId/price`} >\n                    <Price tickersData={ tickersData?.quotes.USD } />\n                </Route>\n                <Route path={`/:coinId/chart`}>\n                    <Chart coinId={ coinId } theme={theme} />\n                </Route>\n              </Switch>\n            </>\n            )}\n        </Container>\n\n)}\n\n\nexport default Coin;\n\n","import {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Coins from \"./routes/Coins\"\nimport Coin from \"./routes/Coin\"\n\ninterface IRouterProps {\n    toggleTheme: () => void;\n    theme: string;\n}\n\n\nfunction Router({ toggleTheme, theme }:IRouterProps) {\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route path=\"/:coinId\">\n                <Coin toggleTheme={toggleTheme} theme={theme}/>\n            </Route>\n            <Route path=\"/\">\n                <Coins toggleTheme={toggleTheme} theme={theme}/>\n            </Route>\n        </Switch>\n    </BrowserRouter>\n}\n\nexport default Router;","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#273c75\",\n  textColor: \"#fbc531\",\n  accentColor: \"#44bd32\",\n};\n\nexport const darkTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n\n}","import { createGlobalStyle } from \"styled-components\";\nimport Router from  \"./Router\"\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\n\nconst GlobalStyle = createGlobalStyle`\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n*{\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${props => props.theme.bgColor};\n  color: ${props => props.theme.textColor};\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nconst Button = styled.button`\n  background-color: rgba(0, 0, 0, 0.5);\n  width: 30px;\n  height:30px;\n  border-radius:15px;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  border:none;\n  color: ${props=> props.theme.textColor};\n  cursor: pointer;\n`;\n\n\nfunction App() {\n  const [theme, setTheme] = useState(\"lightTheme\");\n  const toggleTheme = () => {\n    theme === \"lightTheme\" ? setTheme(\"darkTheme\") : setTheme(\"lightTheme\");\n  };\n  return ( \n    <>\n      <ThemeProvider theme={theme === \"lightTheme\" ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <Router toggleTheme={toggleTheme} theme={theme}/>\n        <ReactQueryDevtools initialIsOpen={false} />\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\n\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n        <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}